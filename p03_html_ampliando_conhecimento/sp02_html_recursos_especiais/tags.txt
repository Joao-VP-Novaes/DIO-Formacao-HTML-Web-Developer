<datalist></datalist>: É usada para fornecer uma lista de opções predefinidas 
para um campo de entrada (<input />), permitindo que os usuários escolham uma 
das opções ou insiram um valor diferente. O atributo list no elemento <input />
deve corresponder ao atributo id do elemento <datalist>. Isso cria a ligação 
entre o campo de entrada e a lista de opções. As opções dentro do <datalist> 
são definidas com elementos <option>. Cada <option> pode ter um atributo 
value, que representa o valor da opção. 

atributo list: É usado em um elemento <input /> para associá-lo a um elemento 
<datalist>. Isso permite que o campo de entrada ofereça sugestões automáticas 
baseadas nas opções fornecidas dentro do <datalist>. O valor do atributo list 
no <input> deve corresponder ao valor do atributo id no <datalist>. Isso cria 
a ligação entre o campo de entrada e a lista de dados.

<kbd></kbd>: Representa a entrada de texto do usuário em um dispositivo de 
entrada, geralmente um teclado. É usada para estilizar texto que indica o que 
o usuário deve digitar. O conteúdo dentro da tag <kbd> é geralmente exibido 
em uma fonte monoespaçada (como o texto digitado em um terminal ou editor de 
código).

<code></code>: É usada para envolver pequenos trechos de código, comandos ou 
qualquer texto que represente código de programação. O conteúdo dentro da tag 
<code> é exibido em uma fonte monoespaçada, o que facilita a leitura e 
distingue o código do restante do texto. A tag <code> é frequentemente usada 
em combinação com a tag <pre> para preservar a formatação do código.

<pre></pre>: É usada para exibir texto pré-formatado em HTML. Isso significa 
que o texto dentro da tag <pre> preserva todos os espaços em branco, quebras 
de linha e formatação, exibindo o conteúdo exatamente como foi escrito no 
código-fonte. É comumente usada para exibir trechos de código em conjunto com 
a tag <code>, pois preserva a formatação do código, tornando-o mais legível.

<details><details/>: É usada para criar uma interface que pode ser expandida 
ou recolhida pelo usuário. É uma maneira de exibir informações adicionais de 
forma interativa e é frequentemente usada para criar seções que podem ser 
expandidas ou contraídas em uma página web. Dentro da tag <details>, você 
geralmente usa a tag <summary> para fornecer um título ou resumo que o 
usuário pode clicar para expandir ou recolher o conteúdo. É possível aninhar 
<details> dentro de outros <details>, permitindo criar seções expandíveis e 
recolhíveis em múltiplos níveis.

<summary></summary>: É usada em conjunto com a tag <details> para fornecer 
um título ou resumo que o usuário pode clicar para expandir ou recolher o 
conteúdo contido dentro do <details>. O conteúdo dentro da tag <summary> é 
sempre visível, enquanto o conteúdo dentro do <details> pode ser oculto ou 
exibido com base na interação do usuário. Não faz sentido usar <summary> fora 
do contexto de <details>.

<meter></meter>: Representa uma medição escalar dentro de um intervalo 
conhecido, ou uma fração de um valor fixo. É usada para indicar uma medição 
precisa de dados numéricos, como a quantidade de armazenamento usado, o nível
de bateria, ou a pontuação de um teste.

    * low: Especifica o valor que indica o limite inferior da faixa. Valores 
           menores ou iguais a este valor são considerados baixos. É usado 
           para destacar visualmente a parte inferior da faixa de valores 
           medidos. 
    * high: Especifica o valor que indica o limite superior da faixa. Valores 
            maiores ou iguais a este valor são considerados altos. É usado 
            para destacar visualmente a parte superior da faixa de valores 
            medidos.
    * optium: Especifica o valor ideal ou preferencial dentro da faixa de 
              medição. Este valor indica a melhor condição ou o ponto ótimo 
              desejado para a medição representada.

<progress></progress>: É usada para representar o progresso de uma tarefa em 
execução, como o download de um arquivo ou a execução de um script. Ela 
mostra uma barra de progresso que reflete o progresso atual da tarefa. Sem o 
atributo value, a barra de progresso é indeterminada e é representada por uma 
animação para indicar que a tarefa está em andamento, mas sem um progresso 
específico.

<script></script>: É usada para incorporar ou referenciar scripts, geralmente 
escritos em JavaScript, dentro de um documento HTML. Esta tag permite 
adicionar funcionalidades dinâmicas e interatividade à página.

<canvas></canvas>: É usada para desenhar gráficos e imagens dinamicamente 
através de JavaScript. É um elemento essencial para criar gráficos, animações 
e outras representações visuais em uma página web. 

atributo autofocus: É utilizado em elementos de formulário HTML para fazer 
com que um determinado elemento receba o foco automaticamente quando a 
página é carregada. Isso significa que, quando a página é aberta ou 
recarregada, o elemento com o atributo autofocus estará pronto para receber a
entrada do usuário sem que ele precise clicar ou tabular até ele. Pode ser 
aplicado a vários tipos de elementos de formulário, como <input>, <textarea>,
<select>, e <button>. Ele é um atributo booleano, o que significa que não 
precisa de um valor; sua mera presença já é suficiente para ativar a 
funcionalidade.

atributo placeholder: É utilizado em elementos de formulário HTML, como 
<input> e <textarea>, para fornecer um texto de dica que aparece dentro do 
campo quando ele está vazio. Esse texto ajuda a orientar o usuário sobre o 
tipo de entrada que é esperado no campo. Quando o usuário clica no campo para 
começar a digitar, o texto do placeholder desaparece.

atributo required: É utilizado em elementos de formulário HTML para indicar 
que o campo deve ser preenchido antes do envio do formulário. Esse atributo 
força o usuário a fornecer um valor no campo, garantindo que a entrada 
necessária seja fornecida. O required é um atributo booleano.

atributo maxlength: É usado em elementos de formulário HTML, como <input> e 
<textarea>, para especificar o número máximo de caracteres que o usuário pode 
inserir no campo. Este atributo ajuda a controlar a quantidade de texto que 
pode ser inserida e é útil para limitar entradas em campos como nome de 
usuário, senhas, mensagens de texto, etc.

atributo minlength: É utilizado em elementos de formulário HTML, como <input> 
e <textarea>, para especificar o número mínimo de caracteres que o usuário 
deve inserir no campo. Este atributo ajuda a garantir que a entrada do 
usuário atenda a um comprimento mínimo, o que pode ser útil para campos como 
senhas, mensagens, nomes de usuário, etc.

atributo form: É utilizado para associar elementos de formulário, como 
<input>, <textarea>, <button>, <select>, e <fieldset>, a um formulário 
específico (<form>). Normalmente, os elementos de formulário são filhos 
diretos do elemento <form>, mas com o atributo 'form', você pode associar um 
elemento de formulário a um formulário que não é seu elemento pai direto. O 
valor do atributo form é o valor do atributo id do formulário ao qual você 
deseja associar o elemento.

atributo contenteditable: É usado em HTML para indicar que o conteúdo de um 
elemento pode ser editado diretamente pelo usuário. Quando um elemento possui 
esse atributo, ele se torna um editor de texto básico, permitindo que o 
usuário modifique seu conteúdo. Pode ser usado em quase qualquer elemento 
HTML, como <div>, <p>, <span>, etc. O contenteditable é um atributo booleano.

<data></data>: É usada para associar um conteúdo legível por humanos a um 
valor legível por máquinas. É especialmente útil para marcar dados com 
valores numéricos ou codificados que têm um significado específico e são 
interpretados por aplicações, como preços, datas, ou códigos de produtos.
O atributo "value" define o valor legível por máquinas que será associado 
ao conteúdo legível por humanos.

atributo for: É utilizado em elementos <label> para associar o rótulo (label) 
a um elemento de formulário específico, geralmente um campo de entrada como 
<input />, <textarea>, ou <select>. Quando o atributo for é utilizado, seu 
valor deve ser igual ao valor do atributo id do elemento do formulário ao 
qual ele está associado. Isso permite que, quando o usuário clicar no rótulo, 
o foco seja automaticamente transferido para o campo de entrada associado.

<!-- -->: O conteúdo dentro desta marcação é um comentário. Ele pode ser 
adicionado ao código-fonte HTML sem ser exibido quando a página for 
renderizada pelo navegador.

<dl></dl>: Em HTML é usada para criar uma lista de definições. Essa lista 
é utilizada para apresentar termos e suas respectivas definições ou 
descrições de forma organizada. Essa tag é especialmente útil para criar 
glossários, listas de termos técnicos, FAQ (Frequently Asked Questions) 
com perguntas e respostas, ou qualquer outro conteúdo onde há uma relação 
direta entre um termo e sua definição.

<dt></dt>: Em HTML é usada dentro de uma lista de definições criada com a 
tag <dl> para representar um termo. Ela define o termo que será descrito ou 
explicado por um ou mais elementos <dd> (Definition Description) subsequentes.

<dd></dd>: Em HTML é usada dentro de uma lista de definições criada com a tag 
<dl> para representar a descrição ou definição de um termo especificado pela 
tag <dt>.