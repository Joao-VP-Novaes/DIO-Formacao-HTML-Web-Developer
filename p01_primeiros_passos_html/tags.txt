<html></html>: É a raiz de um documento HTML, englobando todo o conteúdo da página, 
incluindo as seções <head> e <body>. Ela define o início e o fim do documento HTML.

<head></head>: É a seção de um documento onde se colocam metadados e informações como 
título da página, links para folhas de estilo, scripts, e outras configurações que não 
são exibidas diretamente ao usuário. Ela é carregada antes do body.

<body></body>: Contém todo o conteúdo visível da página, como textos, imagens, links 
e outros elementos.

<title></title>: Define o título da página, exibido na aba do navegador.

<i></i>: Aplica itálico ao texto, sem implicar ênfase semântica.

<strong></strong>: Define texto com forte ênfase, indicando que seu conteúdo é de 
grande importância ou relevância.

<input />: Cria uma caixa de entrada interativa em formulários, permitindo que os 
usuários insiram dados como texto, números ou seleções de opções.

   *type: Especifica o tipo de campo de entrada a ser exibido, como texto, senha, 
          email, número, etc., determinando o formato dos dados que o usuário pode
          inserir.
      -text: Na tag <input> especifica que a entrada deve aceitar texto simples, 
             como palavras ou frases. É comumente usado para campos de texto onde 
             os usuários podem digitar livremente.
      -number: Na tag <input> cria um campo de entrada que permite ao usuário 
               inserir um valor numérico, com opções para definir valores mínimo, 
               máximo e passo.
      -color: Na tag <input> cria um seletor de cor, permitindo ao usuário 
              escolher uma cor a partir de uma paleta, que retorna um valor 
              hexadecimal da cor selecionada.

atributo id: Fornece uma identificação única para um elemento, permitindo 
referenciá-lo facilmente por meio de scripts ou estilos CSS.

atributo style: Permite aplicar estilos diretamente a um elemento, usando 
propriedades CSS como cor, tamanho, margem, etc.

   -color: Define a cor do texto de um elemento usando valores de cores CSS, 
           como nomes de cores, códigos hexadecimais, ou valores RGB.
   -font-family: Especifica a família de fontes que deve ser aplicada ao texto de 
                 um elemento. Esse atributo define a aparência tipográfica do texto, 
                 permitindo ao desenvolvedor escolher entre diversas fontes 
                 disponíveis no sistema ou na web. 
   -font-weight: Controla a espessura (ou peso) do texto. Ela pode ter vários 
                 valores que vão desde palavras-chave até números específicos que 
                 indicam diferentes graus de espessura. 
                 Valores numéricos de 100 a 900: Onde 400 é normal e 700 é negrito. 
                 Outros valores intermediários ou extremos ajustam a espessura de 
                 forma mais precisa.
   -font-size: É usada para definir o tamanho do texto diretamente em um elemento 
               específico. Isso permite um controle preciso e imediato sobre a 
               aparência do texto.
   -background-color: Aplica uma cor de fundo a um elemento específico na página web.
   

atributo class: Atribui um ou mais nomes de classe a um elemento, permitindo 
aplicar estilos CSS ou manipulações JavaScript a grupos de elementos com a mesma 
classe.

<img />: Insere uma imagem em uma página HTML.

   *src: Especifica o URL ou caminho da imagem que deve ser exibida.
   *width: Define a largura da imagem em pixels.
   *height: Define a altura da imagem em pixels.

<h1></h1> a <h6></h6>: Definem cabeçalhos de diferentes níveis em um documento 
HTML, criando uma hierarquia de títulos e subtítulos. 

    Pontos Comuns:
        1. Hierarquia: As tags de cabeçalho de <h1> a <h6> estabelecem uma 
           hierarquia de títulos e subtítulos, que organizam o conteúdo de 
           forma lógica e estruturada.
        2. SEO (Otimização para Motores de Busca): Os motores de busca usam 
           os cabeçalhos para entender a estrutura e o conteúdo da página. 
           Cabeçalhos bem estruturados ajudam a melhorar a indexação e a 
           relevância nos resultados de busca. O uso correto dos cabeçalhos 
           melhora a visibilidade e a classificação da página nos motores de 
           busca.
        3. Acessibilidade: Tecnologias assistivas, como leitores de tela, 
           usam os cabeçalhos para ajudar os usuários a navegar e compreender 
           o conteúdo de forma mais eficiente. Cabeçalhos bem estruturados 
           permitem que os usuários com deficiência visual saltem de seção em 
           seção, em vez de ler todo o texto de forma linear.
        4. Estilização: Por padrão, os navegadores aplicam estilos diferentes 
           a cada nível de cabeçalho, com <h1> sendo o maior e mais proeminente, 
           e <h6> o menor.
        
<p></p>: Define um parágrafo de texto em HTML. Ela é usada principalmente para 
agrupar blocos de texto como parágrafos, indicando ao navegador que o conteúdo 
deve ser tratado como um parágrafo de texto. Por padrão, os parágrafos possuem 
margens superiores e inferiores para separação, mas podem ser estilizados com 
CSS para ajustar a aparência, como fonte, cor e espaçamento. Além disso, a tag 
<p> melhora a estrutura e a leitura do documento, facilitando a navegação para 
usuários que utilizam tecnologias assistivas.

<blockquote></blockquote>: É usada para representar uma seção de texto que foi 
citada de outra fonte. Por padrão, o navegador geralmente indenta e/ou italiza 
o texto dentro de <blockquote> para destacá-lo do restante do conteúdo. Ela é 
frequentemente usada para citar trechos longos de texto, como citações de 
livros, artigos ou entrevistas.

<strong></strong>: É usada para indicar que o texto dentro dela é importante ou 
enfatizado, geralmente resultando em um texto mais negritado no navegador 
padrão. No entanto, é importante notar que o propósito principal dessa tag não 
é apenas para estilizar o texto em negrito, mas sim para transmitir significado 
semântico ao conteúdo.

<u></u>: É utilizada para aplicar sublinhado ao texto dentro dela. No entanto, 
seu uso é desencorajado em favor de uma melhor prática de acessibilidade, já que 
sublinhar o texto pode interferir com a compreensão para algumas pessoas, 
especialmente aquelas que usam leitores de tela.

<mark></mark>: É usada para envolver partes de um texto que são destacadas de 
alguma forma, muitas vezes com uma cor de fundo amarela padrão nos navegadores. 
Ela é frequentemente usada para destacar termos de pesquisa ou outras partes 
importantes de um texto.        

<sup></sup>: É utilizada para renderizar o texto dentro dela como sobrescrito, 
o que significa que o texto é posicionado ligeiramente acima da linha de base 
normal. É comumente usado para representar expoentes, como em fórmulas 
matemáticas, notas de rodapé ou marcas registradas.

<sub></sub>: É usada para definir texto que deve ser exibido como subscrito, 
ou seja, texto que é exibido um pouco abaixo da linha de base do texto normal. 
Isso é comum em fórmulas químicas, equações matemáticas e anotações 
científicas.

<ol></ol>: Define uma lista numerada, onde cada item é precedido por um número 
automaticamente incrementado pelo navegador. Cada item da lista é representado 
pela tag <li> (list item). Listas ordenadas são úteis quando a ordem dos itens 
é importante, como em instruções passo a passo ou rankings.

<ul></ul>: Define uma lista de itens onde a ordem dos itens não é importante. 
Cada item da lista é representado pela tag <li> (list item). Por padrão, os 
navegadores exibem listas não ordenadas com marcadores (bullets) ao lado de 
cada item.

<li></li>: Representa um item de uma lista. Quando usada dentro de uma tag <ol>, 
os itens são numerados. Quando usada dentro de uma tag <ul>, os itens são 
marcados com pontos ou outros símbolos.

<a></a>: Define um hyperlink, que é um link clicável que pode levar o usuário a outra 
página web, a um recurso diferente, ou a uma seção específica dentro da mesma 
página. O atributo mais importante da tag <a> é o href, que especifica a URL de 
destino do link.

   *href: Indica a URL ou o destino para o qual o link aponta. Quando um usuário 
          clica no link, ele será direcionado para a URL especificada no atributo 
          href.
      -#: É uma maneira comum de definir um link que não leva a lugar nenhum ou, 
          mais especificamente, que leva o usuário de volta ao topo da página atual. 
          Quando um usuário clica nesse link, a página é rolada até o topo.
      -#nomeDeUmId: É usado para criar um link âncora que leva o usuário para um 
                    elemento específico na mesma página com o ID correspondente.
                    Por exemplo, se você tiver um elemento na página com 
                    id="section1", ao criar um link com href="#section1", clicar 
                    nesse link fará com que o navegador role a página até o elemento 
                    com o ID "section1", mostrando-o no topo da janela de 
                    visualização.
   *title: Fornece informações adicionais sobre o link, geralmente apresentadas ao 
           usuário como uma dica de ferramenta (tooltip) quando ele passa o cursor 
           sobre o link. Esse atributo pode ser usado para oferecer contexto extra 
           ou descrever o destino do link de maneira mais detalhada.
   *target: Especifica onde o link associado deve ser aberto.
      -_self: Abre o link no mesmo frame, guia ou janela onde o link foi clicado.
      -_blank: Pode abrir a página vinculada em uma nova aba, mas também pode 
               permitir que a página vinculada tenha acesso à window.opener e 
               potencialmente redirecione a página original. Para prevenir isso, 
               é recomendado usar rel="noopener noreferrer" junto com 
               target="_blank".
   *rel: Especifica a relação entre o documento atual e o documento vinculado. Ele 
         é usado para fornecer informações adicionais ao navegador e aos mecanismos 
         de busca sobre o tipo de relacionamento que existe entre as duas páginas.
      -noopener: Garante que a nova página aberta não terá acesso ao objeto 
                 window.opener, prevenindo qualquer tentativa de manipulação da 
                 página de origem.
      -noreferrer: Garante que o referenciador (a URL da página de origem) não seja 
                   enviada à nova página, melhorando a privacidade.

<hr />: É usada para inserir uma linha horizontal em uma página HTML. Ela é usada 
principalmente para separar conteúdo, como parágrafos ou seções, visualmente. Por 
padrão, ela cria uma linha horizontal que se estende pela largura do elemento pai, 
mas você pode estilizá-la com CSS para ajustar sua aparência, como cor, espessura e 
estilo.

<small></small>: É usada em HTML para definir texto que deve ser renderizado em um 
tamanho menor do que o texto circundante. É comumente usado para inserir texto legal, 
notas de rodapé ou qualquer texto que não seja de grande importância em comparação 
com o conteúdo principal da página. 

<del></del>: É usada para marcar texto como deletado ou removido. Quando o navegador 
renderiza o conteúdo dentro dessa tag, geralmente exibe o texto com uma linha através 
dele para indicar que foi removido. Isso é útil em casos como revisões de documentos 
ou histórico de edições, onde você deseja mostrar o texto que foi removido.

<abbr></abbr>: É usada para definir uma abreviação ou uma sigla. Ela é útil para 
fornecer uma explicação ou definição do que a abreviação representa.

   *title: É usado para fornecer uma explicação ou definição da abreviação 
           especificada. Quando um usuário passa o mouse sobre o texto da abreviação, 
           o navegador exibe o conteúdo do atributo title como uma dica de ferramenta 
           (tooltip).

<br />: É usada para inserir uma quebra de linha, ou seja, para forçar o texto ou 
elementos subsequentes a começarem em uma nova linha.


